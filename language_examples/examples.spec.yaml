- source: '@'
  scopesBegin:
    - meta.implementation
    - storage.type
  scopes:
    - punctuation.definition.storage.type
- source: implementation
  scopesEnd:
    - storage.type
- source: CameraManager
  scopes:
    - entity.name.type
- source: '- '
  scopesBegin:
    - meta.scope.implementation
    - meta.function-with-body
    - meta.function
- source: (
  scopesBegin:
    - meta.return-type
  scopes:
    - punctuation.definition.type.begin
- source: nonnull
  scopes:
    - storage.modifier.protocol
- source: NSArray
  scopes:
    - support.class.cocoa
- source: <
  scopesBegin:
    - meta.protocol-list
  scopes:
    - punctuation.section.scope.begin
- source: NSString *
- source: '>'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.protocol-list
- source: '*'
  scopes:
    - keyword.operator
- source: )
  scopes:
    - punctuation.definition.type.end
- source: getCameras
  scopes:
    - entity.name.function
  scopesEnd:
    - meta.function
    - meta.return-type
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' get list of regular cameras'
  scopesEnd:
    - comment.line.double-slash
- source: '    AVCaptureDeviceDiscoverySession '
- source: '*'
  scopes:
    - keyword.operator
- source: 'session '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: 'AVCaptureDeviceDiscoverySession '
- source: '        discoverySessionWithDeviceTypes:@'
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: AVCaptureDeviceTypeBuiltInWideAngleCamera
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: '        mediaType:AVMediaTypeVideo '
- source: '        position:AVCaptureDevicePositionUnspecified'
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' create json object for each camera'
  scopesEnd:
    - comment.line.double-slash
- source: NSMutableArray
  scopes:
    - support.class.cocoa
- source: <
  scopes:
    - keyword.operator.comparison
- source: NSString
  scopes:
    - support.class.cocoa
- source: '*'
  scopes:
    - keyword.operator
- source: '>'
  scopes:
    - keyword.operator.comparison
- source: '*'
  scopes:
    - keyword.operator
- source: 'lst '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: NSMutableArray
  scopes:
    - support.class.cocoa
- source: alloc
  scopes:
    - meta.function-call
    - support.function.any-method
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: init
  scopes:
    - meta.function-call
    - support.function.any-method
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: for
  scopes:
    - keyword.control
- source: (
  scopesBegin:
    - meta.parens.block
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: 'AVCaptureDevice '
- source: '*'
  scopes:
    - keyword.operator
- source: 'device '
- source: in
  scopes:
    - keyword.other.in
- source: session
  scopes:
    - variable.other.object.access
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: devices
  scopes:
    - variable.other.member
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens.block
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: NSString
  scopes:
    - support.class.cocoa
- source: '*'
  scopes:
    - keyword.operator
- source: 's '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: '{ '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: 's '
- source: stringByAppendingFormat
  scopesBegin:
    - meta.function-call
    - support.function.any-method
- source: ':'
  scopes:
    - punctuation.separator.arguments
  scopesEnd:
    - support.function.any-method
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: id
- source: \"
  scopes:
    - constant.character.escape
- source: ': '
- source: '%@'
  scopes:
    - constant.other.placeholder
- source: ', '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: ' device.uniqueID'
  scopesEnd:
    - meta.function-call
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: 's '
- source: stringByAppendingFormat
  scopesBegin:
    - meta.function-call
    - support.function.any-method
- source: ':'
  scopes:
    - punctuation.separator.arguments
  scopesEnd:
    - support.function.any-method
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: facing
- source: \"
  scopes:
    - constant.character.escape
- source: ': '
- source: '%@'
  scopes:
    - constant.other.placeholder
- source: ', '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ','
  scopes:
    - punctuation.separator.delimiter
- source: ' device.position '
- source: '=='
  scopes:
    - keyword.operator.comparison
- source: ' AVCaptureDevicePositionFront '
- source: '?'
  scopes:
    - keyword.operator.ternary
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: front
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ':'
  scopes:
    - keyword.operator.ternary
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: back
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.function-call
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: 's '
- source: stringByAppendingFormat
  scopesBegin:
    - meta.function-call
    - support.function.any-method
- source: ':'
  scopes:
    - punctuation.separator.arguments
  scopesEnd:
    - support.function.any-method
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: orientation
- source: \"
  scopes:
    - constant.character.escape
- source: ': 0, '
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.function-call
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: 's '
- source: stringByAppendingFormat
  scopesBegin:
    - meta.function-call
    - support.function.any-method
- source: ':'
  scopes:
    - punctuation.separator.arguments
  scopesEnd:
    - support.function.any-method
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: \"
  scopes:
    - constant.character.escape
- source: forcedShutterSound
- source: \"
  scopes:
    - constant.character.escape
- source: ': false'
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.function-call
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '        s '
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: 's '
- source: stringByAppendingString
  scopesBegin:
    - meta.function-call
    - support.function.any-method
- source: ':'
  scopes:
    - punctuation.separator.arguments
  scopesEnd:
    - support.function.any-method
- source: '@"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: ' }'
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.function-call
    - string.quoted.double
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '['
  scopesBegin:
    - meta.bracketed
  scopes:
    - punctuation.section.scope.begin
- source: 'lst '
- source: addObject
  scopesBegin:
    - meta.function-call
    - support.function.any-method
- source: ':'
  scopes:
    - punctuation.separator.arguments
  scopesEnd:
    - support.function.any-method
- source: s
  scopesEnd:
    - meta.function-call
- source: ']'
  scopes:
    - punctuation.section.scope.end
  scopesEnd:
    - meta.bracketed
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
- source: return
  scopes:
    - keyword.control
- source: ' lst'
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.scope.implementation
    - meta.function-with-body
    - meta.block
- source: '@'
  scopesBegin:
    - storage.type
  scopes:
    - punctuation.definition.storage.type
- source: end
